{
  "swagger": "2.0",
  "info": {
    "title": "Bug Tracking API",
    "description": "Bug Tracking API",
    "version": "1.0.0"
  },
  "host": "cse341-project2-h9qe.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/bugs/": {
      "get": {
        "tags": [
          "Bugs"
        ],
        "summary": "Get all bugs",
        "description": "Retrieve all bugs.",
        "responses": {
          "200": {
            "description": "Successfully retrieved bugs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Bug"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "An error occurred while retrieving bugs."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bugs"
        ],
        "summary": "Create a new bug",
        "description": "Create a new bug.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Bug information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Login button not responding on mobile devices"
                },
                "description": {
                  "type": "string",
                  "example": "Users are unable to click the login button on iOS Safari. Button appears clickable but no action occurs when tapped."
                },
                "severity": {
                  "type": "string",
                  "example": "High"
                },
                "priority": {
                  "type": "string",
                  "example": "Medium"
                },
                "status": {
                  "type": "string",
                  "example": "Open"
                },
                "assignedDeveloper": {
                  "type": "string",
                  "example": "jane.smith@company.com"
                },
                "reporter": {
                  "type": "string",
                  "example": "john.doe@company.com"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Bug successfully created",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "id": {
                  "type": "string",
                  "example": "Generated bug ID"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Missing required fields"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "An error occurred while creating the bug."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/bugs/{id}": {
      "get": {
        "tags": [
          "Bugs"
        ],
        "summary": "Get bug by ID",
        "description": "Retrieve a specific bug by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the bug",
            "example": "507f1f77bcf86cd799439011"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved bug",
            "schema": {
              "$ref": "#/components/schemas/Bug"
            }
          },
          "400": {
            "description": "Invalid bug ID format",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Must use a valid bug id to find a bug."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Bug not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bug not found."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "An error occurred while retrieving the bug."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Bugs"
        ],
        "summary": "Update bug by ID",
        "description": "Update an existing bug by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the bug to update",
            "example": "507f1f77bcf86cd799439011"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Bug information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Login button not responding on mobile devices"
                },
                "description": {
                  "type": "string",
                  "example": "Users are unable to click the login button on iOS Safari. Button appears clickable but no action occurs when tapped."
                },
                "severity": {
                  "type": "string",
                  "example": "High"
                },
                "priority": {
                  "type": "string",
                  "example": "Medium"
                },
                "status": {
                  "type": "string",
                  "example": "Open"
                },
                "assignedDeveloper": {
                  "type": "string",
                  "example": "jane.smith@company.com"
                },
                "reporter": {
                  "type": "string",
                  "example": "john.doe@company.com"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Bug successfully updated"
          },
          "400": {
            "description": "Invalid bug ID format or missing required fields",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bug not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bug not found or no changes made."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "An error occurred while updating the bug."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bugs"
        ],
        "summary": "Delete bug by ID",
        "description": "Delete a bug by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the bug to delete",
            "example": "507f1f77bcf86cd799439011"
          }
        ],
        "responses": {
          "204": {
            "description": "Bug successfully deleted"
          },
          "400": {
            "description": "Invalid bug ID format",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Must use a valid bug id to delete a bug."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bug not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bug not found."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "An error occurred while deleting the bug."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/projects/": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get all projects",
        "description": "Retrieve all projects.",
        "responses": {
          "200": {
            "description": "Successfully retrieved projects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Project"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "An error occurred while retrieving projects."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create a new project",
        "description": "Create a new project.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Project information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "E-Commerce Website"
                },
                "description": {
                  "type": "string",
                  "example": "Full-stack web application for online retail with user authentication and payment processing"
                },
                "teamMembers": {
                  "type": "array",
                  "example": [
                    "john.doe@example.com",
                    "jane.smith@example.com"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "bugCount": {
                  "type": "number",
                  "example": 15
                },
                "deadline": {
                  "type": "string",
                  "example": "2024-12-31"
                },
                "techStack": {
                  "type": "array",
                  "example": [
                    "Node.js",
                    "React",
                    "MongoDB"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "status": {
                  "type": "string",
                  "example": "In Progress"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Project successfully created",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "id": {
                  "type": "string",
                  "example": "Generated project ID"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Missing required fields"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "An error occurred while creating the project."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get project by ID",
        "description": "Retrieve a specific project by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the project",
            "example": "507f1f77bcf86cd799439011"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved project",
            "schema": {
              "$ref": "#/components/schemas/Project"
            }
          },
          "400": {
            "description": "Invalid project ID format",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Must use a valid project id to find a project."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Project not found."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "An error occurred while retrieving the project."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update project by ID",
        "description": "Update an existing project by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the project to update",
            "example": "507f1f77bcf86cd799439011"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Project information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "E-Commerce Website"
                },
                "description": {
                  "type": "string",
                  "example": "Full-stack web application for online retail with user authentication and payment processing"
                },
                "teamMembers": {
                  "type": "array",
                  "example": [
                    "john.doe@example.com",
                    "jane.smith@example.com"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "bugCount": {
                  "type": "number",
                  "example": 15
                },
                "deadline": {
                  "type": "string",
                  "example": "2024-12-31"
                },
                "techStack": {
                  "type": "array",
                  "example": [
                    "Node.js",
                    "React",
                    "MongoDB"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "status": {
                  "type": "string",
                  "example": "In Progress"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Project successfully updated"
          },
          "400": {
            "description": "Invalid project ID format or missing required fields",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Project not found or no changes made."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "An error occurred while updating the project."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Delete project by ID",
        "description": "Delete a project by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the project to delete",
            "example": "507f1f77bcf86cd799439011"
          }
        ],
        "responses": {
          "204": {
            "description": "Project successfully deleted"
          },
          "400": {
            "description": "Invalid project ID format",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Must use a valid project id to delete a project."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Project not found."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "An error occurred while deleting the project."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Bug": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "title": {
            "type": "string",
            "example": "Login button not responding on mobile devices"
          },
          "description": {
            "type": "string",
            "example": "Users are unable to click the login button on iOS Safari. Button appears clickable but no action occurs when tapped."
          },
          "severity": {
            "type": "string",
            "example": "High"
          },
          "priority": {
            "type": "string",
            "example": "Medium"
          },
          "status": {
            "type": "string",
            "example": "Open"
          },
          "assignedDeveloper": {
            "type": "string",
            "example": "jane.smith@example.com"
          },
          "reporter": {
            "type": "string",
            "example": "john.doe@example.com"
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "name": {
            "type": "string",
            "example": "E-Commerce Website"
          },
          "description": {
            "type": "string",
            "example": "Full-stack web application for online retail with user authentication and payment processing"
          },
          "teamMembers": {
            "type": "array",
            "example": [
              "john.doe@example.com",
              "jane.smith@example.com"
            ]
          },
          "bugCount": {
            "type": "number",
            "example": 15
          },
          "deadline": {
            "type": "string",
            "example": "2024-12-31"
          },
          "techStack": {
            "type": "array",
            "example": [
              "Node.js",
              "React",
              "MongoDB"
            ]
          },
          "status": {
            "type": "string",
            "example": "In Progress"
          }
        }
      }
    }
  }
}